BroadcastJoin

val threshold =  spark.conf.get("spark.sql.autoBroadcastJoinThreshold").toInt
---------------------------------------------------------
column pruning: Avoid Selecting all/unused columns while joinig. how: define select operation after join.if possible before join.
problem:Spark select relavent columns after joins
Solution:
-Do a select after joining data frame which will push the project operation(select) after the join operation. Else it will select all columns.
-Also DO map side operation like uppercase() etc on the smaller dataframe before or after joining  which avoid running functions uppercase on the unused rows.
-sometime auto pruning will not happen so better we define the columns in a select statement before join.
-Works well with massive datasets
---------------------------------------------------------
pre-partitioning : parition your data yourself before spark does. df1.repartition("empid")  
problem: parition your data yourself before spark does.
soln:
partition early:
Make the dataframe  you are going to join use same paritioner/ie partiiont by same columnnmae bothe df. ie df1.repartition("empid")   df2.repartition("empid") .
partioning late: no good 
at best when : defualt performance usually what spark designed.
at worst when: give worst performance when not paritioned.
-
--------------------------------------------------------
bucketing: split data intelligenly before join.Define n Buckets per parition.	bucketBy()/paritionBy/SaveAsTable
bucket prunning = by selectecting/filtering specfic row /id  of daframe it searches only in specific bucket (subset of DF) than all buckets.

problem : When there is multiple join /groupbt of same data frame. same bad performance all the time. By bucketing you create pre-partitioning and joins are faster in 
subsequent joins. Bucketing will be useful only if multple joining of same table is required. 
bucketing useful in joining/groupinng . more useful for grouping.

 
------
skewedjoins - non uniform data accross executors . causing long running task. 
soln:Salting Technique.
1. create new key to join with. 
2. n+1 join keys.
3. uniform task.
-----------------------